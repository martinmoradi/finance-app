name: E2E tests

on:
  push:
    branches: [main, develop]
  pull_request:
    types: [opened, synchronize]

jobs:
  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15

    services:
      postgres:
        image: postgres:17.2-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: finance_app_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/finance_app_test
      NEXT_PUBLIC_APP_URL: http://localhost:3000
      NEXT_PUBLIC_API_URL: http://localhost:3001
      PLAYWRIGHT_BASE_URL: http://localhost:3000
      PLAYWRIGHT_API_URL: http://localhost:3001
      ALLOWED_ORIGINS: http://localhost:3000
      JWT_SECRET: HuJp8YdLf3CyejPX6rLyoJM0eJV9DQYeJfm6ZAO/5o0=
      JWT_EXPIRES_IN: 15m
      REFRESH_TOKEN_SECRET: Oe8GIMo0128znSUtk3Z9biFD8bP3sdRs27PEl9VHm3w=
      REFRESH_TOKEN_EXPIRES_IN: 7d
      CSRF_SECRET: WGtFuZH/f3QYl+2xrGRSxT/WwBtcN9rNeRXWOurO5u8=
      COOKIE_SECRET: +NwyGpZuHFN2zQYQzHNpd1XEg16M3q0RSu1VodCmTTM=
      NODE_ENV: CI

    steps:
      # Check out our repository code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      # Set up pnpm package manager
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10.2.0

      # Cache turbo build artifacts for faster subsequent runs
      - name: Cache turbo build setup
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      # Setup Node.js with pnpm caching
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      # Install project dependencies
      - name: Install dependencies
        run: pnpm install

      # Build all projects in the monorepo
      - name: Build
        run: pnpm build

      # Install Playwright package
      - name: Install Playwright
        run: pnpm add -D @playwright/test --filter=playwright-web

      # Install Playwright Browsers
      - name: Install Playwright Browsers
        run: pnpm --filter=playwright-web exec playwright install --with-deps

        # Prepare database schema
      - name: Create database schema
        run: pnpm --filter=@repo/database test:db:push:ci
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/finance_app_test

      # Split the start command into separate processes
      - name: Start API Server
        run: pnpm --filter=api start &
        env:
          NODE_ENV: test

      - name: Start Web Server
        run: pnpm --filter=web start &
        env:
          NODE_ENV: test

      # Wait for servers to be ready
      - name: Wait for servers
        run: |
          timeout 30 bash -c 'until curl -s http://localhost:3001/health; do sleep 1; done'
          timeout 30 bash -c 'until curl -s http://localhost:3000; do sleep 1; done'

      # Run the E2E tests
      - name: Run E2E Tests
        run: pnpm test:e2e

      # Upload test artifacts on failure
      - name: Upload Playwright report
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
