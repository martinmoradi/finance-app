services:
  postgres:
    container_name: postgres_dev
    image: postgres:17.2-alpine
    restart: unless-stopped
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: finance_app_dev # Changed to dev database
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    networks:
      - app_network_dev
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'postgres']
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin: # Added for database management
    container_name: pgadmin_dev
    image: dpage/pgadmin4
    restart: unless-stopped
    ports:
      - '5050:80'
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    networks:
      - app_network_dev
    depends_on:
      - postgres

  api:
    container_name: api_dev
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile
      target: build # Stop at build stage for development
    restart: unless-stopped
    ports:
      - '3001:3001'
      - '9229:9229' # Node.js debug port
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres_dev:5432/finance_app_dev
      - PORT=3001
      - DEBUG=true
    volumes:
      - ./apps/api:/app/apps/api
      - /app/apps/api/node_modules
    command: pnpm dev # Development command instead of production start
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app_network_dev

  web:
    container_name: web_dev
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile
      target: installer # Stop at installer stage for development
    restart: unless-stopped
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
      - API_URL=http://api_dev:3001
      - NEXT_WEBPACK_USEPOLLING=1 # Enable webpack polling for hot reload
    volumes:
      - ./apps/web:/app/apps/web
      - /app/apps/web/node_modules
      - ./apps/web/.next:/app/.next
    command: pnpm dev
    depends_on:
      - api
    networks:
      - app_network_dev

volumes:
  postgres_dev_data:
    name: finance_app_postgres_dev_data

networks:
  app_network_dev:
    driver: bridge
    name: finance_app_dev_network
